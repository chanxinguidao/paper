package com.hqu.modules.financialmanagement.moneytrend.web;

import com.github.abel533.echarts.Option;
import com.github.abel533.echarts.axis.CategoryAxis;
import com.github.abel533.echarts.axis.ValueAxis;
import com.github.abel533.echarts.code.*;
import com.github.abel533.echarts.data.LineData;
import com.github.abel533.echarts.data.PieData;
import com.github.abel533.echarts.data.PointData;
import com.github.abel533.echarts.feature.MagicType;
import com.github.abel533.echarts.json.GsonOption;
import com.github.abel533.echarts.series.Bar;
import com.github.abel533.echarts.series.Funnel;
import com.github.abel533.echarts.series.Line;
import com.github.abel533.echarts.series.Pie;
import com.hqu.modules.papereview.order.entity.Order;
import com.hqu.modules.papereview.order.service.OrderService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import springfox.documentation.service.ApiListing;

import java.lang.reflect.Array;
import java.text.SimpleDateFormat;
import java.util.*;
import java.text.ParseException;


/**
 * 进账趋势统计Controller
 * @author hzb
 * @version 2018-09-24
 */

@Controller
@RequestMapping(value = "${adminPath}/moneytrend/moneyTrend")
public class MoneyTrendController {

    @Autowired
    OrderService orderService;

    @RequestMapping(value = "")
    public String list(Model model){
        return "financialmanagement/moneytrend/moneyTrend";
    }


    @ResponseBody
    @RequestMapping("barGraph")
    public GsonOption getBarOption(String beginDate,String endDate,String zq){
        GsonOption barOption = new GsonOption();
        barOption.title().text("进账的订单个数和金额总数");
        barOption.tooltip().trigger(Trigger.axis);
        barOption.legend("订单个数", "金额总数");
        barOption.toolbox().show(true).feature(Tool.mark, Tool.dataView, new MagicType(Magic.line, Magic.bar).show(true), Tool.restore, Tool.saveAsImage);
        barOption.calculable(true);
        barOption.yAxis(new ValueAxis());
        Bar bar = new Bar("订单个数");

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        try {
            Date begin=sdf.parse(beginDate);
            Date end=sdf.parse(endDate);
            int days = (int) ((end.getTime() - begin.getTime()) / (1000*3600*24));

            Calendar bef = Calendar.getInstance();
            Calendar aft = Calendar.getInstance();
            bef.setTime(begin);
            aft.setTime(end);
            int result = aft.get(Calendar.MONTH) - bef.get(Calendar.MONTH);
            int add = (aft.get(Calendar.YEAR) - bef.get(Calendar.YEAR)) * 12;

            if("周".equals(zq)) {
                int weeks = days/7;
                String[] week =new String[weeks];
                Integer[] order = new Integer[weeks];
                String beginByWeek = beginDate;
                for(int i=0;i<weeks;i++) {
                    week[i] =  "第"+(i+1)+"周";
                    Date begin1 = sdf.parse(beginByWeek);
                    bef.setTime(begin1);
                    bef.add(Calendar.WEEK_OF_MONTH,1);
                    String endByWeek = sdf.format(bef.getTime());
                    Map<String,Object> map = new HashMap<>();
                    map.put("beginDate",beginByWeek);
                    map.put("endDate",endByWeek);
                    int orderNum = orderService.getOrderByDate(map);
                    order[i] = orderNum;
                    beginByWeek = endByWeek;
                }
                barOption.xAxis(new CategoryAxis().data(week));
                bar.setData(Arrays.asList(order));
            }else if("年".equals(zq)){
                int years = add/12;
                String[] year = new String[years];
                Integer[] order = new Integer[years];
                String beginByYear = beginDate;
                for(int i=0;i<years;i++) {
                    year[i] = "第"+(i+1)+"年";
                    Date begin2 = sdf.parse(beginByYear);
                    bef.setTime(begin2);
                    bef.add(Calendar.YEAR,1);
                    String endByYear = sdf.format(bef.getTime());
                    Map<String,Object> map = new HashMap<>();
                    map.put("beginDate",beginByYear);
                    map.put("endDate",endByYear);
                    int orderNum = orderService.getOrderByDate(map);
                    order[i] = orderNum;
                    beginByYear = endByYear;
                }
                barOption.xAxis(new CategoryAxis().data(year));
                bar.setData(Arrays.asList(order));
            }else if("月".equals(zq)){
                int months = Math.abs(add + result);
                String[] month = new String[months];
                Integer[] order = new Integer[months];
                String beginByMonth = beginDate;
                for(int i=0;i<months;i++) {
                    month[i] = "第"+(i+1)+"月";
                    Date begin3 = sdf.parse(beginByMonth);
                    bef.setTime(begin3);
                    bef.add(Calendar.MONTH,1);
                    String endByMonth = sdf.format(bef.getTime());
                    Map<String,Object> map = new HashMap<>();
                    map.put("beginDate",beginByMonth);
                    map.put("endDate",endByMonth);
                    int orderNum = orderService.getOrderByDate(map);
                    order[i] = orderNum;
                    beginByMonth = endByMonth;
                }
                barOption.xAxis(new CategoryAxis().data(month));
                bar.setData(Arrays.asList(order));
            }else if("日".equals(zq)){
                String[] day = new String[days];
                Integer[] order = new Integer[days];
                String beginByDay = beginDate;
                for(int i=0;i<days;i++) {
                    day[i] = "第"+(i+1)+"日";
                    Date begin4 = sdf.parse(beginByDay);
                    bef.setTime(begin4);
                    bef.add(Calendar.DAY_OF_MONTH,1);
                    String endByDay = sdf.format(bef.getTime());
                    Map<String,Object> map = new HashMap<>();
                    map.put("beginDate",beginByDay);
                    map.put("endDate",endByDay);
                    int orderNum = orderService.getOrderByDate(map);
                    order[i] = orderNum;
                    beginByDay = endByDay;
                }
                barOption.xAxis(new CategoryAxis().data(day));
                bar.setData(Arrays.asList(order));
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }

        bar.markPoint().data(new PointData().type(MarkType.max).name("最大值"), new PointData().type(MarkType.min).name("最小值"));
        bar.markLine().data(new PointData().type(MarkType.average).name("平均值"));

        Bar bar2 = new Bar("金额总数");
//        List<Double> list = Arrays.asList(2.6, 5.9, 9.0, 6.4, 8.7, 0.7, 5.6, 2.2, 8.7, 8.8, 6.0, 2.3);
//        bar2.setData(list);
//        bar2.markPoint().data(new PointData("年最高", 182.2).xAxis(7).yAxis(183).symbolSize(18), new PointData("年最低", 2.3).xAxis(11).yAxis(3));
//        bar2.markLine().data(new PointData().type(MarkType.average).name("平均值"));

        barOption.series(bar,bar2);
        return barOption;
    }

    @ResponseBody
    @RequestMapping("pieGraph")
    public GsonOption getPieOption(String beginDate,String endDate,String zq){
        GsonOption pieOption = new GsonOption();
        //时间轴
        pieOption.timeline().data("2013-01-01", "2013-02-01", "2013-03-01", "2013-04-01", "2013-05-01",
                new LineData("2013-06-01", "emptyStart6", 8), "2013-07-01", "2013-08-01", "2013-09-01", "2013-10-01",
                "2013-11-01", new LineData("2013-12-01", "star6", 8));
        pieOption.timeline().autoPlay(true);
        //timeline变态的地方在于多个Option
        Option basic = new Option();
        basic.title().text("浏览器占比变化").subtext("纯属虚构");
        basic.tooltip().trigger(Trigger.item).formatter("{a} <br/>{b} : {c} ({d}%)");
        basic.legend().data("Chrome", "Firefox", "Safari", "IE9+", "IE8-");
        basic.toolbox().show(true).feature(Tool.mark, Tool.dataView, Tool.restore, Tool.saveAsImage, new MagicType(Magic.pie, Magic.funnel)
                .option(new MagicType.Option().funnel(
                        new Funnel().x("25%").width("50%").funnelAlign(X.left).max(1548))));

        int idx = 1;
        Pie pie = getPie(idx++).center("50%", "45%").radius("50%");
        pie.label().normal().show(true).formatter("{b}{c}({d}%)");
        basic.series(pie);
        //加入
        pieOption.options(basic);
        //构造11个数据
        Option[] os = new Option[11];
        for (int i = 0; i < os.length; i++) {
            os[i] = new Option().series(getPie(idx++));
        }
        pieOption.options(os);
        return pieOption;
    }

    /**
     * 获取饼图数据
     *
     * @param idx
     * @return
     */
    public Pie getPie(int idx) {
        return new Pie().name("浏览器（数据纯属虚构）").data(
                new PieData("Chrome", idx * 128 + 80),
                new PieData("Firefox", idx * 64 + 160),
                new PieData("Safari", idx * 32 + 320),
                new PieData("IE9+", idx * 16 + 640),
                new PieData("IE8-", idx * 8 + 1280));
    }

    @ResponseBody
    @RequestMapping("lineGraph")
    public GsonOption getLineOption(String beginDate,String endDate,String zq){
        GsonOption lineOption = new GsonOption();
        lineOption.tooltip().trigger(Trigger.axis);
        lineOption.legend("邮件营销", "联盟广告", "直接访问", "搜索引擎");
        lineOption.toolbox().show(true);
        lineOption.calculable(true);
        lineOption.xAxis(new CategoryAxis().boundaryGap(false).data("周一", "周二", "周三", "周四", "周五", "周六", "周日"));
        lineOption.yAxis(new ValueAxis());
        lineOption.series(new Line().smooth(true).name("邮件营销").stack("总量").symbol(Symbol.none).data(120, 132, 301, 134, new LineData(90, Symbol.droplet, 5), 230, 210));


        //实现不了js的这个效果
        //line.itemStyle.normal.areaStyle = new AreaStyle();
        LineData lineData = new LineData(201, Symbol.star, 15);
        lineData.itemStyle().normal().label().show(true).textStyle().fontSize(20).fontFamily("微软雅黑").fontWeight("bold");
        lineOption.series(new Line().smooth(true).name("联盟广告").stack("总量").symbol("image://http://echarts.baidu.com/doc/asset/ico/favicon.png").symbolSize(8).data(120, 82, lineData, new LineData(134, Symbol.none), 190, new LineData(230, Symbol.emptypin, 8), 110));

        return lineOption;
    }
}
