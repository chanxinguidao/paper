/**
 * Copyright &copy; 2015-2020 <a href="http://www.jeeplus.org/">JeePlus</a> All rights reserved.
 */
package com.hqu.modules.paperreceive.receive.web;

import java.io.*;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.ConstraintViolationException;

import com.hqu.modules.basedata.studentmanage.entity.StudentManage;
import com.hqu.modules.basedata.studentmanage.service.StudentManageService;
import com.hqu.modules.papereview.order.entity.Order;
import com.hqu.modules.papereview.order.service.OrderService;
import com.hqu.modules.papermanage.entity.Paper;
import com.hqu.modules.papermanage.service.PaperService;
import com.jeeplus.common.utils.FileUtils;
import com.jeeplus.modules.sys.utils.UserUtils;
import com.jeeplus.modules.test.manytomany.entity.Student;
import com.jeeplus.modules.test.manytomany.service.StudentService;
import org.apache.shiro.authz.annotation.Logical;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.connection.SortParameters;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.multipart.MultipartFile;

import com.google.common.collect.Lists;
import com.jeeplus.common.utils.DateUtils;
import com.jeeplus.common.json.AjaxJson;
import com.jeeplus.core.persistence.Page;
import com.jeeplus.core.web.BaseController;
import com.jeeplus.common.utils.StringUtils;
import com.jeeplus.common.utils.excel.ExportExcel;
import com.jeeplus.common.utils.excel.ImportExcel;
import com.hqu.modules.paperreceive.receive.entity.Receive;
import com.hqu.modules.paperreceive.receive.service.ReceiveService;

/**
 * 订单管理Controller
 * @author hzb
 * @version 2018-09-09
 */
@Controller
@RequestMapping(value = "${adminPath}/receive/receive")
public class ReceiveController extends BaseController {

	@Autowired
	private ReceiveService receiveService;
	@Autowired
	private OrderService orderService;
	@Autowired
	private PaperService paperService;
	@Autowired
	private StudentManageService studentManageService;

	@ModelAttribute
	public Receive get(@RequestParam(required = false) String id) {
		Receive entity = null;
		if (StringUtils.isNotBlank(id)) {
			entity = receiveService.get(id);
		}
		if (entity == null) {
			entity = new Receive();
		}
		return entity;
	}

	/**
	 * 论文接收列表页面
	 */
	@RequiresPermissions("receive:receive:list")
	@RequestMapping(value = {"list", ""})
	public String list(Receive receive, Model model) {
		model.addAttribute("receive", receive);
		return "paperreceive/receive/receive";
	}

	/**
	 * 通过提取码获得订单信息
	 */
	@ResponseBody
	@RequestMapping(value = "getOrder")
	public AjaxJson getOrder(String accessCode) {
		AjaxJson ajaxJson = new AjaxJson();
		Order order = new Order();
		order.setTqm(accessCode);
		List<Order> orderList = orderService.findList(order);
		String loginName = UserUtils.getUser().getLoginName();

		if (orderList.size() == 0) {
			ajaxJson.setSuccess(false);
			ajaxJson.setMsg("无效提取码,请重新输入！");
		} else {
			if (!loginName.equals(orderList.get(0).getPszj().getYHZH())) {
				ajaxJson.setSuccess(false);
				ajaxJson.setMsg("专家信息与登陆信息不匹配,请输入正确提取码！");
			} else {
				ajaxJson.setSuccess(true);
				ajaxJson.put("order", orderList.get(0));
				ajaxJson.setMsg("提取订单信息成功！");
			}
		}
		return ajaxJson;
	}

	/**
	 * 提取的论文界面
	 */
	@RequestMapping(value = "getPaperBytqm")
	public String paperList(String tqm, Model model) {
		//提取码找订单
		Order order = new Order();
		order.setTqm(tqm);
		List<Order> orderList = orderService.findList(order);
		Order orderBytqm = orderList.get(0);
		//订单找论文
		Paper paper = new Paper();
		paper.setLWBH(orderList.get(0).getLw().getLWBH());
		List<Paper> paperList = paperService.findList(paper);
		paperList.get(0).setLWZTDM("g");
		paperService.save(paperList.get(0));
		//论文找学生
		StudentManage student = new StudentManage();
		student.setXsxh(paperList.get(0).getXSXH().getXsxh());
		List<StudentManage> studentList = studentManageService.findList(student);
		StudentManage studentByqty = studentList.get(0);

		model.addAttribute("studentByqty", studentByqty);
		model.addAttribute("orderBytqm", orderBytqm);

		return "paperreceive/receive/paperList";
	}

	/**
	 * 提取的论文界面(2019.03.11)
	 */
	@RequestMapping(value = "getPaperInfo")
	public String getPaperInfo(Paper paper, Model model) {

		//论文找学生
		List<Paper> paperList = paperService.findList(paper);

		StudentManage student = new StudentManage();
		student.setXsxh(paperList.get(0).getXSXH().getXsxh());
		List<StudentManage> studentList = studentManageService.findList(student);
		StudentManage studentByqty = studentList.get(0);
		//论文找订单
		Order orderByPaper = new Order();
		orderByPaper.setLw(paper);
		List<Order> orderList = orderService.findList(orderByPaper);

		model.addAttribute("studentByqty", studentByqty);
		model.addAttribute("orderBytqm", orderList.get(0));
		model.addAttribute("paper",paper);

		return "paperreceive/receive/paperList";
	}

	/**
	 * 下载论文附件
	 */
	@RequestMapping("/downloadFile.do")
	public ResponseEntity<byte[]> downloadFile(String filePath) throws IOException {
		//http请求头
		HttpHeaders headers = new HttpHeaders();
		//取出文件名
		String[] a = filePath.split("/");
		String fileName = a[a.length-1];
		//设置attachment(附件)，让浏览器识别为下载
		headers.add("Content-Disposition", "attachment;filename="+fileName);
		//文件路径
		String downLoadPath = filePath;
		//获取文件流
		InputStream in = new BufferedInputStream(new FileInputStream(downLoadPath));
		//将文件读到字节数组中
		byte[] b = new byte[in.available()];
		in.read(b);
		in.close();
		//http状态码也可以使用 HttpStatus.CREATED
		HttpStatus status = HttpStatus.OK;
		ResponseEntity<byte[]> responseEntity = new ResponseEntity<byte[]>(b,headers,status);
		return responseEntity;
	}


}